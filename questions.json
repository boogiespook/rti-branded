{
  "development": {
    "automation": {
      "0": "Manual deployment, no process or automation",
      "1": "Minimal deployment, ad-hoc scripting; non repeatable",
      "2": "Baseline CI processing (unit tests, manual testing)",
      "3": "Advanced CI, >90% automated testing, pipelines, approval gateways",
      "4": "Full CD from development into Production (> 90%)"
    },
    "methodology": {
      "0": "Ad-hoc development approach",
      "1": "Defined waterfall approach",
      "2": "Limited agile development on new projects (not including operations)",
      "3": "Agile development through to production and ops",
      "4": "Agile development in a DevOps culture"
    },
    "architecture": {
      "0": "Ad-hoc choice of application platforms and tooling. Limited understanding of contemporary architectural approaches.",
      "1": "Selected vendor technical roadmap. Initial understanding of new architectures and designs",
      "2": "Iterative development of existing applications. Limited legacy strategy and beginnings of new development architectures",
      "3": "Focus on new application platforms & limited legacy platforms. Well defined architecture for new development projects and operating models",
      "4": "Holistic and defined overall development strategy. Good designs and architectures in place and under regular review"
    },
    "strategy": {
      "0": "Ad-hoc, tactical, one-off requirements and poorly understood and communicated strategy",
      "1": "Repeatible requirements gathering approach; traditional system analysis",
      "2": "Minimal Viable Product approach",
      "3": "Exploration of multiple approaches to solve business needs",
      "4": "Business vaule driven IT innovation. IT working in a collaborative manner with the business."
    },
    "environment": {
      "0": "Traditional programming techniques in a heavily siloed structure",
      "1": "Sporadic agile-adoption with limited cross-team collaboration",
      "2": "Multi-team collaboration through formalised communication channels",
      "3": "Early adoption of cross-functional teams and shared delivery goals",
      "4": "100% DevOps collaboraborative culture with energised cross-functional teams and constant improvement"
    }
  },
  "operations": {
    "automation": {
      "0": "Core build for operating system and only basic (manual) provisioning",
      "1": "Patch and Release management (OS)",
      "2": "Automated QA Staging process (SOE)",
      "3": "Automated OS builds",
      "4": "Automatically managed and provisioned Infrastructure through self service"
    },
    "methodology": {
      "0": "Hosting/Management only",
      "1": "Defined SLAs and ITIL",
      "2": "Compliance and security auditing",
      "3": "SOE",
      "4": "Full DevOps culture"
    },
    "architecture": {
      "0": "Ad-hoc choice of future platforms",
      "1": "Selected vendor technical roadmap",
      "2": "Focus on maintaining existing infrastructure",
      "3": "Primary focus on new applications",
      "4": "Defined strategy for existing and new architectures"
    },
    "strategy": {
      "0": "Instances of negative business impact",
      "1": "Good functioning service operations; few unscheduled outage but slow to deploy",
      "2": "Project based service offerings; no unscheduled outages and rapid deployment",
      "3": "Self service operations for development and the business",
      "4": "Transparent integration with project I.T."
    },
    "environment": {
      "0": "Standard Unix approach in a heavily siloed structure",
      "1": "Reactive rather than Pro-active Operations teams; Water cooler discussions get more done",
      "2": "Collaboration across siloes just beginning and agile understood; sense of urgency for change established",
      "3": "Collaborative, empowered, connected, smaller, cross-functional teams. <br>Open Source and Inner Source solutions actively encouraged and communities of practice forming. New collaborative way of working established",
      "4": "100% DevOps culture with energised cross-functional teams and constant improvement. Positive change realised with individuals contributing; Open Organisation understood"
    }
  }
}
